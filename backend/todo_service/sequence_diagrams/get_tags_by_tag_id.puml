@startuml get tags by TagId
participant Client #64D1AF
participant app.ts
participant tags.controller.ts
participant tags.service.ts
participant DB #FFC0CB

Client -> app.ts : "/tags"
activate Client #D3D3D3
    activate app.ts #D3D3D3
        app.ts -> tags.controller.ts : (**GET**) "/:tagId"
        activate tags.controller.ts #D3D3D3
            tags.controller.ts -> tags.controller.ts : get tagId from req.params\n and save that in a variable\n called **tagId**
            tags.controller.ts -> tags.service.ts : getTagById(tagId)
            activate tags.service.ts #D3D3D3
                alt case : tagId is undefined (!tagId)
                    tags.controller.ts <-- tags.service.ts :  code: 400,\n message: "tagid is required"
                end
                tags.service.ts -> DB : tags.where("_id")\n.equals(new mongoose.Types.ObjectId(tagId))
                activate DB #D3D3D3
                    tags.service.ts <-- DB : Tag
                deactivate DB
            tags.service.ts -> tags.service.ts : get the return Tag value\n and save the values\n in a variable called\n **queryResult**.
                alt case: queryResult is empty\n(queryResult.length === 0)
                tags.service.ts -> tags.service.ts :  code: 404,\n message: "No tags found" 
                else case: queryResult is not empty\n(queryResult.length !== 0)
                    tags.service.ts -> tags.service.ts :  message: "successful",\n code: 200,\n body: queryResult
                end
            tags.controller.ts <-- tags.service.ts: TagResponse
            deactivate tags.service.ts
            tags.controller.ts -> tags.controller.ts : save the return TagResponse\n in a variable called **response**



        alt case : reponse.code is 400
        app.ts <-- tags.controller.ts : status : response.code,\n message: response.message.
        end
        Client <-- app.ts: response.code,\n message: response.message.
        app.ts <-- tags.controller.ts : status:201,\n message: response.data
        deactivate tags.controller.ts
        Client <-- app.ts: status:201,\n message: response.data
    deactivate app.ts
deactivate Client
@enduml