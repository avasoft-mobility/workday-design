@startuml getUserTodos
participant Client #64D1AF
participant microsoftUser.service.ts

Client -> microsoftUser.service.ts : **getUserTodos(userId, defaultTags, date)**
activate Client #D3D3D3
activate microsoftUser.service.ts #D3D3D3

microsoftUser.service.ts -> microsoftUser.service.ts : create a new variable **response**
microsoftUser.service.ts -> microsoftUser.service.ts : make **(GET)** **/todos** api call, \n**Refer:** get todos technical design \nand store the response to the variable **response**

    alt if response in null
        microsoftUser.service.ts --> Client : return [](null array)
    end
    
    alt if response in not null
        microsoftUser.service.ts -> microsoftUser.service.ts : create a new variable **userTodos**
        loop response
            microsoftUser.service.ts --> microsoftUser.service.ts : Loop the response and form the new object structure with _id, \nuserId, microsoftUserId, title, comments, status, type, eta, \nata, date, **tags: call the fetchTodoDefaultTags(todo.tags ? todo.tags : [],** \n**defaultTags) method** \n**Refer:** fetchTodoDefaultTags technical design in shared_services_design folder \nand __v then push the newly formed object to the **userTodos** variable
        end

        microsoftUser.service.ts -> microsoftUser.service.ts: call **todoETABasedSorting(userTodos)** \n**Refer:** todoETABasedSorting method below
        note right of microsoftUser.service.ts: Sort the **userTodos** based on the \neach todo's **highest eta** and \nreturn the response
    end
Client <-- microsoftUser.service.ts : return response
deactivate microsoftUser.service.ts
deactivate Client
@enduml
