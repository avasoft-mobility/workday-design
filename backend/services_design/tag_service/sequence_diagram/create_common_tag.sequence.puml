@startuml getCommonTags
participant Client #64D1AF
participant app.ts
participant commonTags.controller.ts
participant commonTags.service.ts
participant DB #FFC0CB

Client -> app.ts : "/tags/private/common"
activate Client #D3D3D3
activate app.ts #D3D3D3

app.ts -> commonTags.controller.ts : (**POST**) "/"\nstore tag name from body in \nvariable tagName
activate commonTags.controller.ts #D3D3D3

commonTags.controller.ts -> commonTags.service.ts : **createCommonTag(tagName)**
activate commonTags.service.ts #D3D3D3

alt !tagName
    commonTags.controller.ts <-- commonTags.service.ts : return CommonTagResponse\n(message: "Tag name required", code: 400)
end

commonTags.service.ts -> DB : tags.create(query)
activate DB #D3D3D3
note right of DB: query: { tagName }
commonTags.service.ts <-- DB : return Tag\nstore the Tag object in variable tag
deactivate DB

commonTags.controller.ts <-- commonTags.service.ts : return CommonTagResponse\n(body: tag, message: "created Successfully", code: 200)
deactivate commonTags.service.ts

app.ts <-- commonTags.controller.ts: return CommonTagResponse
deactivate commonTags.controller.ts

Client <-- app.ts : return CommonTagResponse
deactivate app.ts
@enduml
